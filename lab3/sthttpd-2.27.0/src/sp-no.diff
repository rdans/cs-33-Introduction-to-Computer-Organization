--- thttpd-sp.s	2017-05-22 15:19:33.388062000 -0700
+++ thttpd-no.s	2017-05-22 15:22:57.840088000 -0700
@@ -351,13 +351,10 @@
 	pushq	%rbx
 	.cfi_def_cfa_offset 16
 	.cfi_offset 3, -16
-	subq	$32, %rsp
-	.cfi_def_cfa_offset 48
-	movq	%fs:40, %rax
-	movq	%rax, 24(%rsp)
-	xorl	%eax, %eax
+	subq	$16, %rsp
+	.cfi_def_cfa_offset 32
 	testq	%rdi, %rdi
-	je	.L59
+	je	.L58
 .L55:
 	movq	(%rdi), %rax
 	movl	$1, %ecx
@@ -382,10 +379,7 @@
 	call	fdwatch_logstats
 	movq	%rbx, %rdi
 	call	tmr_logstats
-	movq	24(%rsp), %rax
-	xorq	%fs:40, %rax
-	jne	.L60
-	addq	$32, %rsp
+	addq	$16, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 16
 	popq	%rbx
@@ -393,15 +387,13 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L59:
+.L58:
 	.cfi_restore_state
 	movq	%rsp, %rdi
 	xorl	%esi, %esi
 	call	gettimeofday
 	movq	%rsp, %rdi
 	jmp	.L55
-.L60:
-	call	__stack_chk_fail
 	.cfi_endproc
 .LFE34:
 	.size	logstats, .-logstats
@@ -483,7 +475,7 @@
 	movl	(%rax), %ebp
 	movl	watchdog_flag(%rip), %eax
 	testl	%eax, %eax
-	je	.L69
+	je	.L67
 	movl	$360, %edi
 	movl	$0, watchdog_flag(%rip)
 	call	alarm
@@ -496,7 +488,7 @@
 	popq	%rbp
 	.cfi_def_cfa_offset 8
 	ret
-.L69:
+.L67:
 	.cfi_restore_state
 	movl	$.LC8, %edi
 	call	chdir
@@ -525,51 +517,44 @@
 	.cfi_offset 3, -32
 	subq	$16, %rsp
 	.cfi_def_cfa_offset 48
-	movq	%fs:40, %rax
-	movq	%rax, 8(%rsp)
-	xorl	%eax, %eax
 	call	__errno_location
 	movl	(%rax), %r12d
 	movq	%rax, %rbx
 	.p2align 4,,10
 	.p2align 3
-.L71:
-	leaq	4(%rsp), %rsi
+.L69:
+	leaq	12(%rsp), %rsi
 	movl	$1, %edx
 	movl	$-1, %edi
 	call	waitpid
 	testl	%eax, %eax
-	je	.L72
-	js	.L88
+	je	.L70
+	js	.L85
 	movq	hs(%rip), %rdx
 	testq	%rdx, %rdx
-	je	.L71
+	je	.L69
 	movl	36(%rdx), %eax
 	subl	$1, %eax
 	cmovs	%ebp, %eax
 	movl	%eax, 36(%rdx)
-	jmp	.L71
+	jmp	.L69
 	.p2align 4,,10
 	.p2align 3
-.L88:
+.L85:
 	movl	(%rbx), %eax
 	cmpl	$4, %eax
-	je	.L71
+	je	.L69
 	cmpl	$11, %eax
-	je	.L71
+	je	.L69
 	cmpl	$10, %eax
-	je	.L72
+	je	.L70
 	movl	$.LC9, %esi
 	movl	$3, %edi
 	xorl	%eax, %eax
 	call	syslog
-.L72:
-	movq	8(%rsp), %rax
-	xorq	%fs:40, %rax
+.L70:
 	movl	%r12d, (%rbx)
-	jne	.L89
 	addq	$16, %rsp
-	.cfi_remember_state
 	.cfi_def_cfa_offset 32
 	popq	%rbx
 	.cfi_def_cfa_offset 24
@@ -578,9 +563,6 @@
 	popq	%r12
 	.cfi_def_cfa_offset 8
 	ret
-.L89:
-	.cfi_restore_state
-	call	__stack_chk_fail
 	.cfi_endproc
 .LFE3:
 	.size	handle_chld, .-handle_chld
@@ -601,12 +583,12 @@
 	.cfi_def_cfa_offset 16
 	call	strdup
 	testq	%rax, %rax
-	je	.L93
+	je	.L89
 	addq	$8, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 8
 	ret
-.L93:
+.L89:
 	.cfi_restore_state
 	movl	$.LC10, %esi
 	movl	$2, %edi
@@ -709,181 +691,178 @@
 	movq	%rdi, %rbx
 	subq	$112, %rsp
 	.cfi_def_cfa_offset 160
-	movq	%fs:40, %rax
-	movq	%rax, 104(%rsp)
-	xorl	%eax, %eax
 	call	fopen
 	testq	%rax, %rax
-	je	.L142
+	je	.L137
 	movq	%rax, %r12
 	movabsq	$4294977024, %r14
-.L95:
+.L91:
 	movq	%r12, %rdx
 	movl	$1000, %esi
 	movq	%rsp, %rdi
 	call	fgets
 	testq	%rax, %rax
-	je	.L146
+	je	.L141
 	movl	$35, %esi
 	movq	%rsp, %rdi
 	call	strchr
 	testq	%rax, %rax
-	je	.L96
+	je	.L92
 	movb	$0, (%rax)
-.L96:
+.L92:
 	movl	$.LC13, %esi
 	movq	%rsp, %rdi
 	call	strspn
 	leaq	(%rsp,%rax), %rbp
 	cmpb	$0, 0(%rbp)
-	jne	.L138
-	jmp	.L95
+	jne	.L133
+	jmp	.L91
 	.p2align 4,,10
 	.p2align 3
-.L98:
+.L94:
 	movl	$61, %esi
 	movq	%rbp, %rdi
 	call	strchr
 	testq	%rax, %rax
-	je	.L133
+	je	.L128
 	leaq	1(%rax), %r13
 	movb	$0, (%rax)
-.L100:
+.L96:
 	movl	$.LC14, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L147
+	je	.L142
 	movl	$.LC15, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L148
+	je	.L143
 	movl	$.LC16, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L149
+	je	.L144
 	movl	$.LC17, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L150
+	je	.L145
 	movl	$.LC18, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L151
+	je	.L146
 	movl	$.LC19, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L152
+	je	.L147
 	movl	$.LC20, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L144
+	je	.L139
 	movl	$.LC21, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L145
+	je	.L140
 	movl	$.LC22, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L144
+	je	.L139
 	movl	$.LC23, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L145
+	je	.L140
 	movl	$.LC24, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L153
+	je	.L148
 	movl	$.LC25, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L154
+	je	.L149
 	movl	$.LC26, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L155
+	je	.L150
 	movl	$.LC27, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L156
+	je	.L151
 	movl	$.LC28, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L157
+	je	.L152
 	movl	$.LC29, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L158
+	je	.L153
 	movl	$.LC30, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L159
+	je	.L154
 	movl	$.LC31, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L160
+	je	.L155
 	movl	$.LC32, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L161
+	je	.L156
 	movl	$.LC33, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L162
+	je	.L157
 	movl	$.LC34, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L163
+	je	.L158
 	movl	$.LC35, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L164
+	je	.L159
 	movl	$.LC36, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L165
+	je	.L160
 	movl	$.LC37, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L166
+	je	.L161
 	movl	$.LC38, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L167
+	je	.L162
 	movl	$.LC39, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L168
+	je	.L163
 	movl	$.LC40, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L128
+	jne	.L124
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	value_required
@@ -892,123 +871,120 @@
 	movl	%eax, max_age(%rip)
 	.p2align 4,,10
 	.p2align 3
-.L102:
+.L98:
 	movl	$.LC13, %esi
 	movq	%rbx, %rdi
 	call	strspn
 	leaq	(%rbx,%rax), %rbp
 	cmpb	$0, 0(%rbp)
-	je	.L95
-.L138:
+	je	.L91
+.L133:
 	movl	$.LC13, %esi
 	movq	%rbp, %rdi
 	call	strcspn
 	leaq	0(%rbp,%rax), %rbx
 	movzbl	(%rbx), %eax
 	cmpb	$32, %al
-	ja	.L98
+	ja	.L94
 	btq	%rax, %r14
-	jnc	.L98
+	jnc	.L94
 	.p2align 4,,10
 	.p2align 3
-.L99:
+.L95:
 	addq	$1, %rbx
 	movzbl	(%rbx), %edx
 	movb	$0, -1(%rbx)
 	cmpb	$32, %dl
-	ja	.L98
+	ja	.L94
 	btq	%rdx, %r14
-	jc	.L99
-	jmp	.L98
-.L147:
+	jc	.L95
+	jmp	.L94
+.L142:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$1, debug(%rip)
-	jmp	.L102
-.L148:
+	jmp	.L98
+.L143:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r13, %rdi
 	call	atoi
 	movw	%ax, port(%rip)
-	jmp	.L102
-.L133:
+	jmp	.L98
+.L128:
 	xorl	%r13d, %r13d
-	jmp	.L100
-.L149:
+	jmp	.L96
+.L144:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r13, %rdi
 	call	e_strdup
 	movq	%rax, dir(%rip)
-	jmp	.L102
-.L150:
+	jmp	.L98
+.L145:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$1, do_chroot(%rip)
 	movl	$1, no_symlink_check(%rip)
-	jmp	.L102
-.L151:
+	jmp	.L98
+.L146:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$0, do_chroot(%rip)
 	movl	$0, no_symlink_check(%rip)
-	jmp	.L102
-.L144:
+	jmp	.L98
+.L139:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$0, no_symlink_check(%rip)
-	jmp	.L102
-.L152:
+	jmp	.L98
+.L147:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r13, %rdi
 	call	e_strdup
 	movq	%rax, data_dir(%rip)
-	jmp	.L102
-.L145:
+	jmp	.L98
+.L140:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$1, no_symlink_check(%rip)
-	jmp	.L102
-.L153:
+	jmp	.L98
+.L148:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r13, %rdi
 	call	e_strdup
 	movq	%rax, user(%rip)
-	jmp	.L102
-.L155:
+	jmp	.L98
+.L150:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r13, %rdi
 	call	atoi
 	movl	%eax, cgi_limit(%rip)
-	jmp	.L102
-.L154:
+	jmp	.L98
+.L149:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r13, %rdi
 	call	e_strdup
 	movq	%rax, cgi_pattern(%rip)
-	jmp	.L102
-.L146:
+	jmp	.L98
+.L141:
 	movq	%r12, %rdi
 	call	fclose
-	movq	104(%rsp), %rax
-	xorq	%fs:40, %rax
-	jne	.L169
 	addq	$112, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 48
@@ -1023,38 +999,30 @@
 	popq	%r14
 	.cfi_def_cfa_offset 8
 	ret
-.L157:
+.L152:
 	.cfi_restore_state
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$1, no_empty_referers(%rip)
-	jmp	.L102
-.L156:
+	jmp	.L98
+.L151:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r13, %rdi
 	call	e_strdup
 	movq	%rax, url_pattern(%rip)
-	jmp	.L102
-.L158:
+	jmp	.L98
+.L153:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r13, %rdi
 	call	e_strdup
 	movq	%rax, local_pattern(%rip)
-	jmp	.L102
-.L159:
-	movq	%r13, %rsi
-	movq	%rbp, %rdi
-	call	value_required
-	movq	%r13, %rdi
-	call	e_strdup
-	movq	%rax, throttlefile(%rip)
-	jmp	.L102
-.L128:
+	jmp	.L98
+.L124:
 	movq	stderr(%rip), %rdi
 	movq	argv0(%rip), %rdx
 	movq	%rbp, %rcx
@@ -1063,77 +1031,83 @@
 	call	fprintf
 	movl	$1, %edi
 	call	exit
-.L168:
+.L163:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r13, %rdi
 	call	e_strdup
 	movq	%rax, p3p(%rip)
-	jmp	.L102
-.L167:
+	jmp	.L98
+.L162:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r13, %rdi
 	call	e_strdup
 	movq	%rax, charset(%rip)
-	jmp	.L102
-.L166:
+	jmp	.L98
+.L161:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r13, %rdi
 	call	e_strdup
 	movq	%rax, pidfile(%rip)
-	jmp	.L102
-.L142:
+	jmp	.L98
+.L137:
 	movq	%rbx, %rdi
 	call	perror
 	movl	$1, %edi
 	call	exit
-.L169:
-	call	__stack_chk_fail
-.L161:
+.L154:
+	movq	%r13, %rsi
+	movq	%rbp, %rdi
+	call	value_required
+	movq	%r13, %rdi
+	call	e_strdup
+	movq	%rax, throttlefile(%rip)
+	jmp	.L98
+.L156:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r13, %rdi
 	call	e_strdup
 	movq	%rax, logfile(%rip)
-	jmp	.L102
-.L160:
+	jmp	.L98
+.L155:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r13, %rdi
 	call	e_strdup
 	movq	%rax, hostname(%rip)
-	jmp	.L102
-.L165:
+	jmp	.L98
+.L160:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$0, do_global_passwd(%rip)
-	jmp	.L102
-.L164:
+	jmp	.L98
+.L159:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$1, do_global_passwd(%rip)
-	jmp	.L102
-.L163:
+	jmp	.L98
+.L158:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$0, do_vhost(%rip)
-	jmp	.L102
-.L162:
+	jmp	.L98
+.L157:
 	movq	%r13, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$1, do_vhost(%rip)
-	jmp	.L102
+	jmp	.L98
 	.cfi_endproc
 .LFE12:
 	.size	read_config, .-read_config
@@ -1243,66 +1217,66 @@
 	movq	$.LC43, charset(%rip)
 	movq	$.LC44, p3p(%rip)
 	movl	$-1, max_age(%rip)
-	jle	.L202
+	jle	.L196
 	movq	8(%rsi), %rbx
 	movq	%rsi, %r14
 	movl	$1, %ebp
 	movl	$.LC45, %r12d
 	cmpb	$45, (%rbx)
-	je	.L209
-	jmp	.L173
+	je	.L203
+	jmp	.L167
 	.p2align 4,,10
 	.p2align 3
-.L218:
+.L212:
 	leal	1(%rbp), %r15d
 	cmpl	%r15d, %r13d
-	jg	.L216
+	jg	.L210
 	movl	$.LC48, %edi
 	movl	$3, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	je	.L179
-.L178:
+	je	.L173
+.L172:
 	movl	$.LC49, %edi
 	movl	$3, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	jne	.L179
+	jne	.L173
 	leal	1(%rbp), %eax
 	cmpl	%eax, %r13d
-	jle	.L179
+	jle	.L173
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, dir(%rip)
-.L177:
+.L171:
 	addl	$1, %ebp
 	cmpl	%ebp, %r13d
-	jle	.L171
-.L219:
+	jle	.L165
+.L213:
 	movslq	%ebp, %rax
 	movq	(%r14,%rax,8), %rbx
 	cmpb	$45, (%rbx)
-	jne	.L173
-.L209:
+	jne	.L167
+.L203:
 	movl	$3, %ecx
 	movq	%rbx, %rsi
 	movq	%r12, %rdi
 	repz cmpsb
-	je	.L217
+	je	.L211
 	movl	$.LC47, %edi
 	movl	$3, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	je	.L218
+	je	.L212
 	movl	$.LC48, %edi
 	movl	$3, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	jne	.L178
+	jne	.L172
 	leal	1(%rbp), %r15d
 	cmpl	%r15d, %r13d
-	jle	.L179
+	jle	.L173
 	movslq	%r15d, %rax
 	movl	%r15d, %ebp
 	movq	(%r14,%rax,8), %rdi
@@ -1310,10 +1284,10 @@
 	call	atoi
 	cmpl	%ebp, %r13d
 	movw	%ax, port(%rip)
-	jg	.L219
-.L171:
+	jg	.L213
+.L165:
 	cmpl	%ebp, %r13d
-	jne	.L173
+	jne	.L167
 	addq	$8, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 56
@@ -1332,259 +1306,259 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L179:
+.L173:
 	.cfi_restore_state
 	movl	$.LC50, %edi
 	movl	$3, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	jne	.L180
+	jne	.L174
 	movl	$1, do_chroot(%rip)
 	movl	$1, no_symlink_check(%rip)
-	jmp	.L177
+	jmp	.L171
 	.p2align 4,,10
 	.p2align 3
-.L180:
+.L174:
 	movl	$.LC51, %edi
 	movl	$5, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	jne	.L181
+	jne	.L175
 	movl	$0, do_chroot(%rip)
 	movl	$0, no_symlink_check(%rip)
-	jmp	.L177
+	jmp	.L171
 	.p2align 4,,10
 	.p2align 3
-.L216:
+.L210:
 	movslq	%r15d, %rax
 	movl	%r15d, %ebp
 	movq	(%r14,%rax,8), %rdi
 	call	read_config
-	jmp	.L177
+	jmp	.L171
 	.p2align 4,,10
 	.p2align 3
-.L181:
+.L175:
 	movl	$.LC52, %edi
 	movl	$4, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	jne	.L182
+	jne	.L176
 	leal	1(%rbp), %eax
 	cmpl	%eax, %r13d
-	jle	.L182
+	jle	.L176
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, data_dir(%rip)
-	jmp	.L177
+	jmp	.L171
 	.p2align 4,,10
 	.p2align 3
-.L182:
+.L176:
 	movl	$.LC53, %edi
 	movl	$3, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	jne	.L183
+	jne	.L177
 	movl	$0, no_symlink_check(%rip)
-	jmp	.L177
+	jmp	.L171
 	.p2align 4,,10
 	.p2align 3
-.L183:
+.L177:
 	movl	$.LC54, %edi
 	movl	$5, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	je	.L220
+	je	.L214
 	movl	$.LC55, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L185
+	jne	.L179
 	leal	1(%rbp), %eax
 	cmpl	%eax, %r13d
-	jle	.L185
+	jle	.L179
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, user(%rip)
-	jmp	.L177
-.L220:
+	jmp	.L171
+.L214:
 	movl	$1, no_symlink_check(%rip)
-	jmp	.L177
-.L185:
+	jmp	.L171
+.L179:
 	movl	$.LC56, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L186
+	jne	.L180
 	leal	1(%rbp), %eax
 	cmpl	%eax, %r13d
-	jle	.L186
+	jle	.L180
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, cgi_pattern(%rip)
-	jmp	.L177
-.L186:
+	jmp	.L171
+.L180:
 	movl	$.LC57, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	je	.L221
+	je	.L215
 	movl	$.LC58, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L189
+	jne	.L183
 	leal	1(%rbp), %eax
 	cmpl	%eax, %r13d
-	jle	.L190
+	jle	.L184
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, hostname(%rip)
-	jmp	.L177
-.L221:
+	jmp	.L171
+.L215:
 	leal	1(%rbp), %eax
 	cmpl	%eax, %r13d
-	jle	.L188
+	jle	.L182
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, throttlefile(%rip)
-	jmp	.L177
-.L188:
+	jmp	.L171
+.L182:
 	movl	$.LC58, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L189
-.L190:
+	jne	.L183
+.L184:
 	movl	$.LC60, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L191
+	jne	.L185
 	movl	$1, do_vhost(%rip)
-	jmp	.L177
-.L189:
+	jmp	.L171
+.L183:
 	movl	$.LC59, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L190
+	jne	.L184
 	leal	1(%rbp), %eax
 	cmpl	%eax, %r13d
-	jle	.L190
+	jle	.L184
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, logfile(%rip)
-	jmp	.L177
-.L191:
+	jmp	.L171
+.L185:
 	movl	$.LC61, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	je	.L222
+	je	.L216
 	movl	$.LC62, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L193
+	jne	.L187
 	movl	$1, do_global_passwd(%rip)
-	jmp	.L177
-.L222:
+	jmp	.L171
+.L216:
 	movl	$0, do_vhost(%rip)
-	jmp	.L177
-.L202:
-	movl	$1, %ebp
 	jmp	.L171
-.L193:
+.L196:
+	movl	$1, %ebp
+	jmp	.L165
+.L187:
 	movl	$.LC63, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L194
+	jne	.L188
 	movl	$0, do_global_passwd(%rip)
-	jmp	.L177
-.L217:
+	jmp	.L171
+.L211:
 	movl	$.LC46, %edi
 	call	puts
 	xorl	%edi, %edi
 	call	exit
-.L194:
+.L188:
 	movl	$.LC64, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	je	.L223
+	je	.L217
 	movl	$.LC65, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L197
+	jne	.L191
 	leal	1(%rbp), %eax
 	cmpl	%eax, %r13d
-	jle	.L196
+	jle	.L190
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, charset(%rip)
-	jmp	.L177
-.L223:
+	jmp	.L171
+.L217:
 	leal	1(%rbp), %eax
 	cmpl	%eax, %r13d
-	jle	.L196
+	jle	.L190
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, pidfile(%rip)
-	jmp	.L177
-.L196:
+	jmp	.L171
+.L190:
 	movl	$.LC66, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	je	.L199
-.L198:
+	je	.L193
+.L192:
 	movl	$.LC67, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L199
+	jne	.L193
 	leal	1(%rbp), %r15d
 	cmpl	%r15d, %r13d
-	jle	.L199
+	jle	.L193
 	movslq	%r15d, %rax
 	movl	%r15d, %ebp
 	movq	(%r14,%rax,8), %rdi
 	call	atoi
 	movl	%eax, max_age(%rip)
-	jmp	.L177
-.L197:
+	jmp	.L171
+.L191:
 	movl	$.LC66, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L198
+	jne	.L192
 	leal	1(%rbp), %eax
 	cmpl	%eax, %r13d
-	jle	.L199
+	jle	.L193
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, p3p(%rip)
-	jmp	.L177
-.L199:
+	jmp	.L171
+.L193:
 	movl	$.LC68, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L173
+	jne	.L167
 	movl	$1, debug(%rip)
-	jmp	.L177
-.L173:
+	jmp	.L171
+.L167:
 	call	usage
 	.cfi_endproc
 .LFE10:
@@ -1638,12 +1612,9 @@
 	.cfi_offset 3, -48
 	subq	$10048, %rsp
 	.cfi_def_cfa_offset 10096
-	movq	%fs:40, %rax
-	movq	%rax, 10040(%rsp)
-	xorl	%eax, %eax
 	call	fopen
 	testq	%rax, %rax
-	je	.L262
+	je	.L255
 	leaq	16(%rsp), %rdi
 	leaq	32(%rsp), %r13
 	leaq	5041(%rsp), %r12
@@ -1652,29 +1623,29 @@
 	call	gettimeofday
 	.p2align 4,,10
 	.p2align 3
-.L226:
+.L220:
 	movq	%rbx, %rdx
 	movl	$5000, %esi
 	movq	%r13, %rdi
 	call	fgets
 	testq	%rax, %rax
-	je	.L263
+	je	.L256
 	movl	$35, %esi
 	movq	%r13, %rdi
 	call	strchr
 	testq	%rax, %rax
-	je	.L227
+	je	.L221
 	movb	$0, (%rax)
-.L227:
+.L221:
 	movq	%r13, %rax
-.L228:
+.L222:
 	movl	(%rax), %ecx
 	addq	$4, %rax
 	leal	-16843009(%rcx), %edx
 	notl	%ecx
 	andl	%ecx, %edx
 	andl	$-2139062144, %edx
-	je	.L228
+	je	.L222
 	movl	%edx, %ecx
 	shrl	$16, %ecx
 	testl	$32896, %edx
@@ -1687,15 +1658,15 @@
 	subq	%r13, %rax
 	testl	%eax, %eax
 	movl	%eax, %edx
-	jle	.L230
+	jle	.L224
 	leal	-1(%rax), %edx
 	movslq	%edx, %rax
 	movzbl	32(%rsp,%rax), %edi
 	cmpb	$32, %dil
-	jbe	.L264
+	jbe	.L257
 	.p2align 4,,10
 	.p2align 3
-.L231:
+.L225:
 	leaq	8(%rsp), %rcx
 	leaq	5040(%rsp), %rdx
 	xorl	%eax, %eax
@@ -1704,7 +1675,7 @@
 	movq	%r13, %rdi
 	call	__isoc99_sscanf
 	cmpl	$3, %eax
-	je	.L233
+	je	.L227
 	leaq	5040(%rsp), %rdx
 	xorl	%eax, %eax
 	movq	%rsp, %rcx
@@ -1712,41 +1683,41 @@
 	movq	%r13, %rdi
 	call	__isoc99_sscanf
 	cmpl	$2, %eax
-	jne	.L237
+	jne	.L231
 	movq	$0, 8(%rsp)
 	.p2align 4,,10
 	.p2align 3
-.L233:
+.L227:
 	cmpb	$47, 5040(%rsp)
-	jne	.L239
-	jmp	.L265
+	jne	.L233
+	jmp	.L258
 	.p2align 4,,10
 	.p2align 3
-.L240:
+.L234:
 	leaq	2(%rax), %rsi
 	leaq	1(%rax), %rdi
 	call	strcpy
-.L239:
+.L233:
 	leaq	5040(%rsp), %rdi
 	movl	$.LC74, %esi
 	call	strstr
 	testq	%rax, %rax
-	jne	.L240
+	jne	.L234
 	movslq	numthrottles(%rip), %rdx
 	movl	maxthrottles(%rip), %eax
 	cmpl	%eax, %edx
-	jl	.L241
+	jl	.L235
 	testl	%eax, %eax
-	jne	.L242
+	jne	.L236
 	movl	$4800, %edi
 	movl	$100, maxthrottles(%rip)
 	call	malloc
 	movq	%rax, throttles(%rip)
-.L243:
+.L237:
 	testq	%rax, %rax
-	je	.L244
+	je	.L238
 	movslq	numthrottles(%rip), %rdx
-.L245:
+.L239:
 	leaq	(%rdx,%rdx,2), %r14
 	leaq	5040(%rsp), %rdi
 	salq	$4, %r14
@@ -1767,37 +1738,37 @@
 	movq	$0, 32(%rax)
 	movl	$0, 40(%rax)
 	movq	%rcx, 16(%rax)
-	jmp	.L226
+	jmp	.L220
 	.p2align 4,,10
 	.p2align 3
-.L264:
+.L257:
 	movabsq	$4294977024, %r8
 	movl	%edx, %edx
 	movq	%rax, %rcx
 	subq	%rdx, %rcx
 	btq	%rdi, %r8
 	movq	%r8, %rsi
-	jc	.L259
-	jmp	.L231
+	jc	.L252
+	jmp	.L225
 	.p2align 4,,10
 	.p2align 3
-.L266:
+.L259:
 	movzbl	31(%rsp,%rax), %edx
 	cmpb	$32, %dl
-	ja	.L231
+	ja	.L225
 	subq	$1, %rax
 	btq	%rdx, %rsi
-	jnc	.L231
-.L259:
+	jnc	.L225
+.L252:
 	cmpq	%rcx, %rax
 	movl	%eax, %edx
 	movb	$0, 0(%r13,%rax)
-	jne	.L266
-.L230:
+	jne	.L259
+.L224:
 	testl	%edx, %edx
-	je	.L226
-	jmp	.L231
-.L237:
+	je	.L220
+	jmp	.L225
+.L231:
 	movq	%r13, %rcx
 	movq	%rbp, %rdx
 	xorl	%eax, %eax
@@ -1811,8 +1782,8 @@
 	movl	$.LC73, %esi
 	xorl	%eax, %eax
 	call	fprintf
-	jmp	.L226
-.L242:
+	jmp	.L220
+.L236:
 	addl	%eax, %eax
 	movq	throttles(%rip), %rdi
 	movl	%eax, maxthrottles(%rip)
@@ -1821,16 +1792,13 @@
 	salq	$4, %rsi
 	call	realloc
 	movq	%rax, throttles(%rip)
-	jmp	.L243
-.L241:
+	jmp	.L237
+.L235:
 	movq	throttles(%rip), %rax
-	jmp	.L245
-.L263:
+	jmp	.L239
+.L256:
 	movq	%rbx, %rdi
 	call	fclose
-	movq	10040(%rsp), %rax
-	xorq	%fs:40, %rax
-	jne	.L267
 	addq	$10048, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 48
@@ -1845,13 +1813,13 @@
 	popq	%r14
 	.cfi_def_cfa_offset 8
 	ret
-.L265:
+.L258:
 	.cfi_restore_state
 	leaq	5040(%rsp), %rdi
 	movq	%r12, %rsi
 	call	strcpy
-	jmp	.L239
-.L262:
+	jmp	.L233
+.L255:
 	movq	%rbp, %rdx
 	movl	$.LC69, %esi
 	movl	$2, %edi
@@ -1861,9 +1829,7 @@
 	call	perror
 	movl	$1, %edi
 	call	exit
-.L267:
-	call	__stack_chk_fail
-.L244:
+.L238:
 	movl	$.LC75, %esi
 	movl	$2, %edi
 	xorl	%eax, %eax
@@ -1895,21 +1861,21 @@
 	.cfi_startproc
 	movl	no_log(%rip), %eax
 	testl	%eax, %eax
-	jne	.L268
+	jne	.L260
 	cmpq	$0, hs(%rip)
-	je	.L268
+	je	.L260
 	movq	logfile(%rip), %rsi
 	testq	%rsi, %rsi
-	je	.L268
+	je	.L260
 	movl	$.LC77, %edi
 	movl	$2, %ecx
 	repz cmpsb
-	jne	.L282
-.L268:
+	jne	.L274
+.L260:
 	rep ret
 	.p2align 4,,10
 	.p2align 3
-.L282:
+.L274:
 	pushq	%rbp
 	.cfi_def_cfa_offset 16
 	.cfi_offset 6, -16
@@ -1931,9 +1897,9 @@
 	movq	%rbp, %rdi
 	call	chmod
 	testq	%rbx, %rbx
-	je	.L272
+	je	.L264
 	testl	%eax, %eax
-	jne	.L272
+	jne	.L264
 	movq	%rbx, %rdi
 	call	fileno
 	movl	$2, %esi
@@ -1955,7 +1921,7 @@
 	jmp	httpd_set_logfp
 	.p2align 4,,10
 	.p2align 3
-.L272:
+.L264:
 	.cfi_restore_state
 	addq	$8, %rsp
 	.cfi_def_cfa_offset 24
@@ -2003,31 +1969,31 @@
 	subq	$16, %rsp
 	.cfi_def_cfa_offset 48
 	movl	num_connects(%rip), %eax
-.L292:
+.L284:
 	cmpl	%eax, max_connects(%rip)
-	jle	.L302
+	jle	.L294
 	movslq	first_free_connect(%rip), %rax
 	cmpl	$-1, %eax
-	je	.L286
+	je	.L278
 	leaq	(%rax,%rax,8), %rbx
 	salq	$4, %rbx
 	addq	connects(%rip), %rbx
 	movl	(%rbx), %eax
 	testl	%eax, %eax
-	jne	.L286
+	jne	.L278
 	movq	8(%rbx), %rdx
 	testq	%rdx, %rdx
-	je	.L303
-.L288:
+	je	.L295
+.L280:
 	movq	hs(%rip), %rdi
 	movl	%ebp, %esi
 	call	httpd_get_conn
 	testl	%eax, %eax
-	je	.L291
+	je	.L283
 	cmpl	$2, %eax
-	jne	.L304
+	jne	.L296
 	movl	$1, %eax
-.L283:
+.L275:
 	addq	$16, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 32
@@ -2040,7 +2006,7 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L304:
+.L296:
 	.cfi_restore_state
 	movl	4(%rbx), %eax
 	movl	$1, (%rbx)
@@ -2064,12 +2030,12 @@
 	addq	$1, stats_connections(%rip)
 	movl	num_connects(%rip), %eax
 	cmpl	stats_simultaneous(%rip), %eax
-	jle	.L292
+	jle	.L284
 	movl	%eax, stats_simultaneous(%rip)
-	jmp	.L292
+	jmp	.L284
 	.p2align 4,,10
 	.p2align 3
-.L291:
+.L283:
 	movq	%r12, %rdi
 	movl	%eax, 12(%rsp)
 	call	tmr_run
@@ -2086,20 +2052,20 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L303:
+.L295:
 	.cfi_restore_state
 	movl	$720, %edi
 	call	malloc
 	testq	%rax, %rax
 	movq	%rax, 8(%rbx)
-	je	.L305
+	je	.L297
 	movl	$0, (%rax)
 	addl	$1, httpd_conn_count(%rip)
 	movq	%rax, %rdx
-	jmp	.L288
+	jmp	.L280
 	.p2align 4,,10
 	.p2align 3
-.L302:
+.L294:
 	xorl	%eax, %eax
 	movl	$.LC81, %esi
 	movl	$4, %edi
@@ -2107,15 +2073,15 @@
 	movq	%r12, %rdi
 	call	tmr_run
 	xorl	%eax, %eax
-	jmp	.L283
-.L286:
+	jmp	.L275
+.L278:
 	movl	$2, %edi
 	movl	$.LC82, %esi
 	xorl	%eax, %eax
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L305:
+.L297:
 	movl	$2, %edi
 	movl	$.LC83, %esi
 	call	syslog
@@ -2140,7 +2106,7 @@
 	movq	%rax, 64(%rdi)
 	movl	numthrottles(%rip), %eax
 	testl	%eax, %eax
-	jle	.L330
+	jle	.L322
 	pushq	%r12
 	.cfi_def_cfa_offset 16
 	.cfi_offset 12, -16
@@ -2153,45 +2119,45 @@
 	.cfi_def_cfa_offset 32
 	.cfi_offset 3, -32
 	movq	%rdi, %rbx
-	jmp	.L321
+	jmp	.L313
 	.p2align 4,,10
 	.p2align 3
-.L314:
+.L306:
 	cmpq	%rdi, %rax
 	cmovl	%rdi, %rax
 	movq	%rax, 72(%rbx)
-.L309:
+.L301:
 	addl	$1, %r12d
 	cmpl	%r12d, numthrottles(%rip)
-	jle	.L315
-.L331:
+	jle	.L307
+.L323:
 	addq	$48, %rbp
 	cmpl	$9, 56(%rbx)
-	jg	.L315
-.L321:
+	jg	.L307
+.L313:
 	movq	8(%rbx), %rax
 	movq	240(%rax), %rsi
 	movq	throttles(%rip), %rax
 	movq	(%rax,%rbp), %rdi
 	call	match
 	testl	%eax, %eax
-	je	.L309
+	je	.L301
 	movq	%rbp, %rdx
 	addq	throttles(%rip), %rdx
 	movq	8(%rdx), %rax
 	movq	24(%rdx), %rcx
 	leaq	(%rax,%rax), %rsi
 	cmpq	%rsi, %rcx
-	jg	.L318
+	jg	.L310
 	movq	16(%rdx), %rdi
 	cmpq	%rdi, %rcx
-	jl	.L318
+	jl	.L310
 	movl	40(%rdx), %ecx
 	testl	%ecx, %ecx
-	js	.L310
+	js	.L302
 	addl	$1, %ecx
 	movslq	%ecx, %r8
-.L311:
+.L303:
 	movslq	56(%rbx), %rsi
 	leal	1(%rsi), %r9d
 	movl	%r9d, 56(%rbx)
@@ -2201,19 +2167,19 @@
 	idivq	%r8
 	movq	64(%rbx), %rdx
 	cmpq	$-1, %rdx
-	je	.L328
+	je	.L320
 	cmpq	%rdx, %rax
 	cmovg	%rdx, %rax
-.L328:
+.L320:
 	movq	%rax, 64(%rbx)
 	movq	72(%rbx), %rax
 	cmpq	$-1, %rax
-	jne	.L314
+	jne	.L306
 	addl	$1, %r12d
 	cmpl	%r12d, numthrottles(%rip)
 	movq	%rdi, 72(%rbx)
-	jg	.L331
-.L315:
+	jg	.L323
+.L307:
 	popq	%rbx
 	.cfi_remember_state
 	.cfi_restore 3
@@ -2228,7 +2194,7 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L310:
+.L302:
 	.cfi_restore_state
 	movl	$3, %edi
 	xorl	%eax, %eax
@@ -2241,10 +2207,10 @@
 	movl	$0, 40(%rdx)
 	movq	8(%rdx), %rax
 	movq	16(%rdx), %rdi
-	jmp	.L311
+	jmp	.L303
 	.p2align 4,,10
 	.p2align 3
-.L318:
+.L310:
 	popq	%rbx
 	.cfi_restore 3
 	.cfi_def_cfa_offset 24
@@ -2256,7 +2222,7 @@
 	.cfi_restore 12
 	.cfi_def_cfa_offset 8
 	ret
-.L330:
+.L322:
 	movl	$1, %eax
 	ret
 	.cfi_endproc
@@ -2279,25 +2245,22 @@
 	.cfi_offset 3, -32
 	xorl	%ebp, %ebp
 	xorl	%ebx, %ebx
-	subq	$32, %rsp
-	.cfi_def_cfa_offset 64
+	subq	$16, %rsp
+	.cfi_def_cfa_offset 48
 	movq	%rsp, %rdi
-	movq	%fs:40, %rax
-	movq	%rax, 24(%rsp)
-	xorl	%eax, %eax
 	call	gettimeofday
 	movq	%rsp, %rdi
 	call	logstats
 	movl	max_connects(%rip), %ecx
 	testl	%ecx, %ecx
-	jg	.L352
-	jmp	.L339
+	jg	.L343
+	jmp	.L331
 	.p2align 4,,10
 	.p2align 3
-.L336:
+.L328:
 	movq	8(%rax), %rdi
 	testq	%rdi, %rdi
-	je	.L337
+	je	.L329
 	call	httpd_destroy_conn
 	movq	%rbx, %r12
 	addq	connects(%rip), %r12
@@ -2305,57 +2268,53 @@
 	call	free
 	subl	$1, httpd_conn_count(%rip)
 	movq	$0, 8(%r12)
-.L337:
+.L329:
 	addl	$1, %ebp
 	addq	$144, %rbx
 	cmpl	%ebp, max_connects(%rip)
-	jle	.L339
-.L352:
+	jle	.L331
+.L343:
 	movq	%rbx, %rax
 	addq	connects(%rip), %rax
 	movl	(%rax), %edx
 	testl	%edx, %edx
-	je	.L336
+	je	.L328
 	movq	8(%rax), %rdi
 	movq	%rsp, %rsi
 	call	httpd_close_conn
 	movq	%rbx, %rax
 	addq	connects(%rip), %rax
-	jmp	.L336
+	jmp	.L328
 	.p2align 4,,10
 	.p2align 3
-.L339:
+.L331:
 	movq	hs(%rip), %rbx
 	testq	%rbx, %rbx
-	je	.L335
+	je	.L327
 	movl	72(%rbx), %edi
 	movq	$0, hs(%rip)
 	cmpl	$-1, %edi
-	je	.L340
+	je	.L332
 	call	fdwatch_del_fd
-.L340:
+.L332:
 	movl	76(%rbx), %edi
 	cmpl	$-1, %edi
-	je	.L341
+	je	.L333
 	call	fdwatch_del_fd
-.L341:
+.L333:
 	movq	%rbx, %rdi
 	call	httpd_terminate
-.L335:
+.L327:
 	call	mmc_destroy
 	call	tmr_destroy
 	movq	connects(%rip), %rdi
 	call	free
 	movq	throttles(%rip), %rdi
 	testq	%rdi, %rdi
-	je	.L332
+	je	.L324
 	call	free
-.L332:
-	movq	24(%rsp), %rax
-	xorq	%fs:40, %rax
-	jne	.L360
-	addq	$32, %rsp
-	.cfi_remember_state
+.L324:
+	addq	$16, %rsp
 	.cfi_def_cfa_offset 32
 	popq	%rbx
 	.cfi_def_cfa_offset 24
@@ -2364,9 +2323,6 @@
 	popq	%r12
 	.cfi_def_cfa_offset 8
 	ret
-.L360:
-	.cfi_restore_state
-	call	__stack_chk_fail
 	.cfi_endproc
 .LFE18:
 	.size	shut_down, .-shut_down
@@ -2381,10 +2337,10 @@
 	.cfi_startproc
 	movl	num_connects(%rip), %eax
 	testl	%eax, %eax
-	je	.L366
+	je	.L356
 	movl	$1, got_usr1(%rip)
 	ret
-.L366:
+.L356:
 	subq	$8, %rsp
 	.cfi_def_cfa_offset 16
 	call	shut_down
@@ -2430,22 +2386,22 @@
 	.cfi_startproc
 	movl	56(%rdi), %eax
 	testl	%eax, %eax
-	jle	.L369
+	jle	.L359
 	subl	$1, %eax
 	movq	throttles(%rip), %rcx
 	leaq	16(%rdi), %rdx
 	leaq	20(%rdi,%rax,4), %rsi
 	.p2align 4,,10
 	.p2align 3
-.L371:
+.L361:
 	movslq	(%rdx), %rax
 	addq	$4, %rdx
 	leaq	(%rax,%rax,2), %rax
 	salq	$4, %rax
 	subl	$1, 40(%rcx,%rax)
 	cmpq	%rsi, %rdx
-	jne	.L371
-.L369:
+	jne	.L361
+.L359:
 	rep ret
 	.cfi_endproc
 .LFE36:
@@ -2465,22 +2421,22 @@
 	movq	200(%rdi), %rax
 	addq	%rax, stats_bytes(%rip)
 	cmpl	$3, (%rbx)
-	je	.L375
+	je	.L365
 	movl	704(%rdi), %edi
 	movq	%rsi, 8(%rsp)
 	call	fdwatch_del_fd
 	movq	8(%rbx), %rdi
 	movq	8(%rsp), %rsi
-.L375:
+.L365:
 	call	httpd_close_conn
 	movq	%rbx, %rdi
 	call	clear_throttles.isra.0
 	movq	104(%rbx), %rdi
 	testq	%rdi, %rdi
-	je	.L376
+	je	.L366
 	call	tmr_cancel
 	movq	$0, 104(%rbx)
-.L376:
+.L366:
 	movl	first_free_connect(%rip), %eax
 	movl	$0, (%rbx)
 	subl	$1, num_connects(%rip)
@@ -2523,23 +2479,23 @@
 	.cfi_def_cfa_offset 32
 	movq	96(%rdi), %rdi
 	testq	%rdi, %rdi
-	je	.L382
+	je	.L372
 	call	tmr_cancel
 	movq	$0, 96(%rbx)
-.L382:
+.L372:
 	movl	(%rbx), %edx
 	cmpl	$4, %edx
-	je	.L395
+	je	.L385
 	movq	8(%rbx), %rax
 	movl	556(%rax), %ecx
 	testl	%ecx, %ecx
-	je	.L384
+	je	.L374
 	cmpl	$3, %edx
-	je	.L385
+	je	.L375
 	movl	704(%rax), %edi
 	call	fdwatch_del_fd
 	movq	8(%rbx), %rax
-.L385:
+.L375:
 	movl	704(%rax), %edi
 	movl	$1, %esi
 	movl	$4, (%rbx)
@@ -2550,12 +2506,12 @@
 	movl	704(%rax), %edi
 	call	fdwatch_add_fd
 	cmpq	$0, 104(%rbx)
-	je	.L386
+	je	.L376
 	movl	$.LC87, %esi
 	movl	$3, %edi
 	xorl	%eax, %eax
 	call	syslog
-.L386:
+.L376:
 	xorl	%r8d, %r8d
 	movl	$500, %ecx
 	movq	%rbx, %rdx
@@ -2564,7 +2520,7 @@
 	call	tmr_create
 	testq	%rax, %rax
 	movq	%rax, 104(%rbx)
-	je	.L396
+	je	.L386
 	addq	$8, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 24
@@ -2575,14 +2531,14 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L395:
+.L385:
 	.cfi_restore_state
 	movq	104(%rbx), %rdi
 	call	tmr_cancel
 	movq	8(%rbx), %rax
 	movq	$0, 104(%rbx)
 	movl	$0, 556(%rax)
-.L384:
+.L374:
 	addq	$8, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 24
@@ -2593,7 +2549,7 @@
 	popq	%rbp
 	.cfi_def_cfa_offset 8
 	jmp	really_clear_connection
-.L396:
+.L386:
 	.cfi_restore_state
 	movl	$2, %edi
 	movl	$.LC88, %esi
@@ -2652,10 +2608,10 @@
 	movq	160(%rbx), %rsi
 	movq	152(%rbx), %rdx
 	cmpq	%rdx, %rsi
-	jb	.L400
+	jb	.L390
 	cmpq	$5000, %rdx
-	jbe	.L427
-.L426:
+	jbe	.L417
+.L416:
 	movq	httpd_err400form(%rip), %r8
 	movq	httpd_err400title(%rip), %rdx
 	movl	$.LC44, %r9d
@@ -2663,7 +2619,7 @@
 	movl	$400, %esi
 	movq	%rbx, %rdi
 	call	httpd_send_err
-.L425:
+.L415:
 	popq	%rbx
 	.cfi_remember_state
 	.cfi_def_cfa_offset 24
@@ -2676,7 +2632,7 @@
 	jmp	finish_connection
 	.p2align 4,,10
 	.p2align 3
-.L427:
+.L417:
 	.cfi_restore_state
 	leaq	152(%rbx), %rsi
 	leaq	144(%rbx), %rdi
@@ -2684,14 +2640,14 @@
 	call	httpd_realloc_str
 	movq	152(%rbx), %rdx
 	movq	160(%rbx), %rsi
-.L400:
+.L390:
 	subq	%rsi, %rdx
 	addq	144(%rbx), %rsi
 	movl	704(%rbx), %edi
 	call	read
 	testl	%eax, %eax
-	je	.L426
-	js	.L428
+	je	.L416
+	js	.L418
 	cltq
 	addq	%rax, 160(%rbx)
 	movq	(%r12), %rax
@@ -2699,36 +2655,36 @@
 	movq	%rax, 88(%rbp)
 	call	httpd_got_request
 	testl	%eax, %eax
-	je	.L399
+	je	.L389
 	cmpl	$2, %eax
-	je	.L426
+	je	.L416
 	movq	%rbx, %rdi
 	call	httpd_parse_request
 	testl	%eax, %eax
-	js	.L425
+	js	.L415
 	movq	%rbp, %rdi
 	call	check_throttles
 	testl	%eax, %eax
-	je	.L429
+	je	.L419
 	movq	%r12, %rsi
 	movq	%rbx, %rdi
 	call	httpd_start_request
 	testl	%eax, %eax
-	js	.L425
+	js	.L415
 	movl	528(%rbx), %eax
 	testl	%eax, %eax
-	je	.L410
+	je	.L400
 	movq	536(%rbx), %rax
 	movq	%rax, 136(%rbp)
 	movq	544(%rbx), %rax
 	addq	$1, %rax
 	movq	%rax, 128(%rbp)
-.L411:
+.L401:
 	cmpq	$0, 712(%rbx)
-	je	.L430
+	je	.L420
 	movq	128(%rbp), %rax
 	cmpq	%rax, 136(%rbp)
-	jge	.L425
+	jge	.L415
 	movq	(%r12), %rax
 	movl	704(%rbx), %edi
 	movl	$2, 0(%rbp)
@@ -2748,15 +2704,15 @@
 	jmp	fdwatch_add_fd
 	.p2align 4,,10
 	.p2align 3
-.L428:
+.L418:
 	.cfi_restore_state
 	call	__errno_location
 	movl	(%rax), %eax
 	cmpl	$4, %eax
-	je	.L399
+	je	.L389
 	cmpl	$11, %eax
-	jne	.L426
-.L399:
+	jne	.L416
+.L389:
 	popq	%rbx
 	.cfi_remember_state
 	.cfi_def_cfa_offset 24
@@ -2767,7 +2723,7 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L429:
+.L419:
 	.cfi_restore_state
 	movq	208(%rbx), %r9
 	movq	httpd_err503form(%rip), %r8
@@ -2776,20 +2732,20 @@
 	movl	$503, %esi
 	movq	%rbx, %rdi
 	call	httpd_send_err
-	jmp	.L425
+	jmp	.L415
 	.p2align 4,,10
 	.p2align 3
-.L410:
+.L400:
 	movq	192(%rbx), %rax
 	movl	$0, %edx
 	testq	%rax, %rax
 	cmovs	%rdx, %rax
 	movq	%rax, 128(%rbp)
-	jmp	.L411
-.L430:
+	jmp	.L401
+.L420:
 	movl	56(%rbp), %eax
 	testl	%eax, %eax
-	jle	.L431
+	jle	.L421
 	subl	$1, %eax
 	movq	throttles(%rip), %rcx
 	movq	200(%rbx), %rsi
@@ -2797,20 +2753,20 @@
 	leaq	20(%rbp,%rax,4), %rdi
 	.p2align 4,,10
 	.p2align 3
-.L416:
+.L406:
 	movslq	(%rdx), %rax
 	addq	$4, %rdx
 	leaq	(%rax,%rax,2), %rax
 	salq	$4, %rax
 	addq	%rsi, 32(%rcx,%rax)
 	cmpq	%rdx, %rdi
-	jne	.L416
-.L415:
+	jne	.L406
+.L405:
 	movq	%rsi, 136(%rbp)
-	jmp	.L425
-.L431:
-	movq	200(%rbx), %rsi
 	jmp	.L415
+.L421:
+	movq	200(%rbx), %rsi
+	jmp	.L405
 	.cfi_endproc
 .LFE20:
 	.size	handle_read, .-handle_read
@@ -2829,7 +2785,7 @@
 	.cfi_startproc
 	movl	max_connects(%rip), %eax
 	testl	%eax, %eax
-	jle	.L446
+	jle	.L436
 	pushq	%r13
 	.cfi_def_cfa_offset 16
 	.cfi_offset 13, -16
@@ -2847,32 +2803,32 @@
 	xorl	%ebp, %ebp
 	subq	$8, %rsp
 	.cfi_def_cfa_offset 48
-	jmp	.L439
+	jmp	.L429
 	.p2align 4,,10
 	.p2align 3
-.L449:
-	jl	.L434
+.L439:
+	jl	.L424
 	cmpl	$3, %eax
-	jg	.L434
+	jg	.L424
 	movq	0(%r13), %rax
 	subq	88(%rbx), %rax
 	cmpq	$299, %rax
-	jg	.L447
-.L434:
+	jg	.L437
+.L424:
 	addl	$1, %ebp
 	addq	$144, %r12
 	cmpl	%ebp, max_connects(%rip)
-	jle	.L448
-.L439:
+	jle	.L438
+.L429:
 	movq	%r12, %rbx
 	addq	connects(%rip), %rbx
 	movl	(%rbx), %eax
 	cmpl	$1, %eax
-	jne	.L449
+	jne	.L439
 	movq	0(%r13), %rax
 	subq	88(%rbx), %rax
 	cmpq	$59, %rax
-	jle	.L434
+	jle	.L424
 	movq	8(%rbx), %rax
 	leaq	16(%rax), %rdi
 	call	httpd_ntoa
@@ -2891,10 +2847,10 @@
 	movq	%r13, %rsi
 	movq	%rbx, %rdi
 	call	finish_connection
-	jmp	.L434
+	jmp	.L424
 	.p2align 4,,10
 	.p2align 3
-.L447:
+.L437:
 	movq	8(%rbx), %rax
 	leaq	16(%rax), %rdi
 	call	httpd_ntoa
@@ -2906,10 +2862,10 @@
 	movq	%r13, %rsi
 	movq	%rbx, %rdi
 	call	clear_connection
-	jmp	.L434
+	jmp	.L424
 	.p2align 4,,10
 	.p2align 3
-.L448:
+.L438:
 	addq	$8, %rsp
 	.cfi_def_cfa_offset 40
 	popq	%rbx
@@ -2924,7 +2880,7 @@
 	popq	%r13
 	.cfi_restore 13
 	.cfi_def_cfa_offset 8
-.L446:
+.L436:
 	rep ret
 	.cfi_endproc
 .LFE29:
@@ -2960,23 +2916,20 @@
 	.cfi_offset 3, -40
 	movq	%rsi, %rbp
 	movq	%rdi, %rbx
-	subq	$56, %rsp
-	.cfi_def_cfa_offset 96
-	movq	8(%rdi), %r12
-	movq	%fs:40, %rax
-	movq	%rax, 40(%rsp)
-	xorl	%eax, %eax
+	subq	$40, %rsp
+	.cfi_def_cfa_offset 80
 	movq	64(%rdi), %rax
+	movq	8(%rdi), %r12
 	cmpq	$-1, %rax
-	je	.L451
+	je	.L441
 	leaq	3(%rax), %rdx
 	testq	%rax, %rax
 	cmovns	%rax, %rdx
 	sarq	$2, %rdx
-.L451:
+.L441:
 	movq	472(%r12), %rax
 	testq	%rax, %rax
-	jne	.L452
+	jne	.L442
 	movq	136(%rbx), %rsi
 	movq	128(%rbx), %rax
 	movl	704(%r12), %edi
@@ -2986,22 +2939,22 @@
 	addq	712(%r12), %rsi
 	call	write
 	testl	%eax, %eax
-	js	.L508
-.L454:
-	je	.L457
+	js	.L497
+.L444:
+	je	.L447
 	movq	0(%rbp), %rdx
 	movq	%rdx, 88(%rbx)
 	movq	472(%r12), %rdx
 	testq	%rdx, %rdx
-	je	.L506
+	je	.L495
 	movslq	%eax, %rcx
 	cmpq	%rcx, %rdx
-	ja	.L509
+	ja	.L498
 	subl	%edx, %eax
 	movq	$0, 472(%r12)
-.L506:
+.L495:
 	movslq	%eax, %rdi
-.L464:
+.L454:
 	movq	8(%rbx), %rdx
 	movq	%rdi, %r10
 	movq	%rdi, %rax
@@ -3011,31 +2964,31 @@
 	movq	%rax, 200(%rdx)
 	movl	56(%rbx), %edx
 	testl	%edx, %edx
-	jle	.L470
+	jle	.L460
 	subl	$1, %edx
 	movq	throttles(%rip), %r8
 	leaq	16(%rbx), %rsi
 	leaq	20(%rbx,%rdx,4), %r9
 	.p2align 4,,10
 	.p2align 3
-.L469:
+.L459:
 	movslq	(%rsi), %rcx
 	addq	$4, %rsi
 	leaq	(%rcx,%rcx,2), %rcx
 	salq	$4, %rcx
 	addq	%rdi, 32(%r8,%rcx)
 	cmpq	%r9, %rsi
-	jne	.L469
-.L470:
+	jne	.L459
+.L460:
 	cmpq	128(%rbx), %r10
-	jge	.L510
+	jge	.L499
 	movq	112(%rbx), %rdx
 	cmpq	$100, %rdx
-	jg	.L511
-.L471:
+	jg	.L500
+.L461:
 	movq	64(%rbx), %rcx
 	cmpq	$-1, %rcx
-	je	.L450
+	je	.L440
 	movq	0(%rbp), %r13
 	subq	80(%rbx), %r13
 	movl	$1, %edx
@@ -3043,7 +2996,7 @@
 	cqto
 	idivq	%r13
 	cmpq	%rax, %rcx
-	jge	.L450
+	jge	.L440
 	movl	704(%r12), %edi
 	movl	$3, (%rbx)
 	call	fdwatch_del_fd
@@ -3054,21 +3007,21 @@
 	movl	%eax, %r12d
 	subl	%r13d, %r12d
 	cmpq	$0, 96(%rbx)
-	je	.L473
+	je	.L463
 	movl	$.LC91, %esi
 	movl	$3, %edi
 	xorl	%eax, %eax
 	call	syslog
-.L473:
+.L463:
 	testl	%r12d, %r12d
 	movl	$500, %ecx
-	jle	.L505
+	jle	.L494
 	movslq	%r12d, %r12
 	imulq	$1000, %r12, %rcx
-	jmp	.L505
+	jmp	.L494
 	.p2align 4,,10
 	.p2align 3
-.L452:
+.L442:
 	movq	%rax, 8(%rsp)
 	movq	128(%rbx), %rdi
 	movq	%rsp, %rsi
@@ -3086,48 +3039,60 @@
 	movq	%rcx, 16(%rsp)
 	call	writev
 	testl	%eax, %eax
-	jns	.L454
-.L508:
+	jns	.L444
+.L497:
 	call	__errno_location
 	movl	(%rax), %eax
 	cmpl	$4, %eax
-	je	.L450
+	je	.L440
 	cmpl	$11, %eax
-	je	.L457
+	je	.L447
 	cmpl	$32, %eax
 	setne	%cl
 	cmpl	$22, %eax
 	setne	%dl
 	testb	%dl, %cl
-	je	.L461
+	je	.L451
 	cmpl	$104, %eax
-	je	.L461
+	je	.L451
 	movq	208(%r12), %rdx
 	movl	$.LC93, %esi
 	movl	$3, %edi
 	xorl	%eax, %eax
 	call	syslog
-.L461:
+.L451:
 	movq	%rbp, %rsi
 	movq	%rbx, %rdi
 	call	clear_connection
-	jmp	.L450
+	addq	$40, %rsp
+	.cfi_remember_state
+	.cfi_def_cfa_offset 40
+	popq	%rbx
+	.cfi_def_cfa_offset 32
+	popq	%rbp
+	.cfi_def_cfa_offset 24
+	popq	%r12
+	.cfi_def_cfa_offset 16
+	popq	%r13
+	.cfi_def_cfa_offset 8
+	ret
 	.p2align 4,,10
 	.p2align 3
-.L457:
+.L447:
+	.cfi_restore_state
 	addq	$100, 112(%rbx)
 	movl	704(%r12), %edi
 	movl	$3, (%rbx)
 	call	fdwatch_del_fd
 	cmpq	$0, 96(%rbx)
-	je	.L460
+	je	.L450
 	movl	$.LC91, %esi
 	movl	$3, %edi
 	xorl	%eax, %eax
 	call	syslog
-.L460:
+.L450:
 	movq	112(%rbx), %rcx
-.L505:
+.L494:
 	xorl	%r8d, %r8d
 	movq	%rbx, %rdx
 	movl	$wakeup_connection, %esi
@@ -3135,12 +3100,9 @@
 	call	tmr_create
 	testq	%rax, %rax
 	movq	%rax, 96(%rbx)
-	je	.L512
-.L450:
-	movq	40(%rsp), %rax
-	xorq	%fs:40, %rax
-	jne	.L513
-	addq	$56, %rsp
+	je	.L501
+.L440:
+	addq	$40, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 40
 	popq	%rbx
@@ -3154,14 +3116,14 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L511:
+.L500:
 	.cfi_restore_state
 	subq	$100, %rdx
 	movq	%rdx, 112(%rbx)
-	jmp	.L471
+	jmp	.L461
 	.p2align 4,,10
 	.p2align 3
-.L509:
+.L498:
 	movq	368(%r12), %rdi
 	subl	%eax, %edx
 	movslq	%edx, %r13
@@ -3170,17 +3132,27 @@
 	call	memmove
 	movq	%r13, 472(%r12)
 	xorl	%edi, %edi
-	jmp	.L464
+	jmp	.L454
 	.p2align 4,,10
 	.p2align 3
-.L510:
+.L499:
 	movq	%rbp, %rsi
 	movq	%rbx, %rdi
 	call	finish_connection
-	jmp	.L450
-.L513:
-	call	__stack_chk_fail
-.L512:
+	addq	$40, %rsp
+	.cfi_remember_state
+	.cfi_def_cfa_offset 40
+	popq	%rbx
+	.cfi_def_cfa_offset 32
+	popq	%rbp
+	.cfi_def_cfa_offset 24
+	popq	%r12
+	.cfi_def_cfa_offset 16
+	popq	%r13
+	.cfi_def_cfa_offset 8
+	ret
+.L501:
+	.cfi_restore_state
 	movl	$2, %edi
 	movl	$.LC92, %esi
 	xorl	%eax, %eax
@@ -3214,23 +3186,17 @@
 	movq	%rdi, %rbx
 	movq	%rsi, %rbp
 	movl	$4096, %edx
-	subq	$4120, %rsp
-	.cfi_def_cfa_offset 4144
-	movq	%fs:40, %rax
-	movq	%rax, 4104(%rsp)
-	xorl	%eax, %eax
+	subq	$4104, %rsp
+	.cfi_def_cfa_offset 4128
 	movq	8(%rdi), %rax
 	movq	%rsp, %rsi
 	movl	704(%rax), %edi
 	call	read
 	testl	%eax, %eax
-	js	.L521
-	je	.L518
-.L515:
-	movq	4104(%rsp), %rax
-	xorq	%fs:40, %rax
-	jne	.L522
-	addq	$4120, %rsp
+	js	.L508
+	je	.L506
+.L503:
+	addq	$4104, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 24
 	popq	%rbx
@@ -3240,21 +3206,25 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L521:
+.L508:
 	.cfi_restore_state
 	call	__errno_location
 	movl	(%rax), %eax
 	cmpl	$4, %eax
-	je	.L515
+	je	.L503
 	cmpl	$11, %eax
-	je	.L515
-.L518:
+	je	.L503
+.L506:
 	movq	%rbp, %rsi
 	movq	%rbx, %rdi
 	call	really_clear_connection
-	jmp	.L515
-.L522:
-	call	__stack_chk_fail
+	addq	$4104, %rsp
+	.cfi_def_cfa_offset 24
+	popq	%rbx
+	.cfi_def_cfa_offset 16
+	popq	%rbp
+	.cfi_def_cfa_offset 8
+	ret
 	.cfi_endproc
 .LFE22:
 	.size	handle_linger, .-handle_linger
@@ -3281,74 +3251,72 @@
 	pushq	%r13
 	.cfi_def_cfa_offset 24
 	.cfi_offset 13, -24
-	movq	%rcx, %r13
+	xorl	%eax, %eax
 	pushq	%r12
 	.cfi_def_cfa_offset 32
 	.cfi_offset 12, -32
 	pushq	%rbp
 	.cfi_def_cfa_offset 40
 	.cfi_offset 6, -40
-	movl	$6, %ecx
+	movq	%rcx, %r13
 	pushq	%rbx
 	.cfi_def_cfa_offset 48
 	.cfi_offset 3, -48
 	movq	%rdi, %rbp
+	movl	$6, %ecx
 	movq	%rsi, %r12
 	movq	%rdx, %r14
 	movl	$10, %esi
+	subq	$80, %rsp
+	.cfi_def_cfa_offset 128
 	movl	$.LC94, %edx
-	subq	$96, %rsp
-	.cfi_def_cfa_offset 144
-	leaq	16(%rsp), %rbx
-	movq	%fs:40, %rax
-	movq	%rax, 88(%rsp)
-	xorl	%eax, %eax
+	leaq	32(%rsp), %rbx
 	movq	%rbx, %rdi
 	rep stosq
 	movzwl	port(%rip), %ecx
-	leaq	64(%rsp), %rdi
-	movl	$1, 16(%rsp)
-	movl	$1, 24(%rsp)
+	leaq	16(%rsp), %rdi
+	movl	$1, 32(%rsp)
+	movl	$1, 40(%rsp)
 	call	snprintf
 	movq	hostname(%rip), %rdi
 	leaq	8(%rsp), %rcx
-	leaq	64(%rsp), %rsi
+	leaq	16(%rsp), %rsi
 	movq	%rbx, %rdx
 	call	getaddrinfo
 	testl	%eax, %eax
-	jne	.L543
+	jne	.L528
 	movq	8(%rsp), %rax
 	testq	%rax, %rax
-	je	.L525
+	je	.L511
 	xorl	%ebx, %ebx
 	xorl	%esi, %esi
-	jmp	.L529
+	jmp	.L515
 	.p2align 4,,10
 	.p2align 3
-.L545:
+.L530:
 	cmpl	$10, %edx
-	jne	.L526
+	jne	.L512
 	testq	%rsi, %rsi
 	cmove	%rax, %rsi
-.L526:
+.L512:
 	movq	40(%rax), %rax
 	testq	%rax, %rax
-	je	.L544
-.L529:
+	je	.L529
+.L515:
 	movl	4(%rax), %edx
 	cmpl	$2, %edx
-	jne	.L545
+	jne	.L530
 	testq	%rbx, %rbx
 	cmove	%rax, %rbx
 	movq	40(%rax), %rax
 	testq	%rax, %rax
-	jne	.L529
-.L544:
+	jne	.L515
+.L529:
 	testq	%rsi, %rsi
-	je	.L546
+	je	.L531
 	movl	16(%rsi), %r8d
 	cmpq	$128, %r8
-	ja	.L542
+	ja	.L527
 	movl	$16, %ecx
 	movq	%r14, %rdi
 	rep stosq
@@ -3357,12 +3325,12 @@
 	movq	24(%rsi), %rsi
 	call	memmove
 	movl	$1, 0(%r13)
-.L531:
+.L517:
 	testq	%rbx, %rbx
-	je	.L547
+	je	.L532
 	movl	16(%rbx), %r8d
 	cmpq	$128, %r8
-	ja	.L542
+	ja	.L527
 	xorl	%eax, %eax
 	movl	$16, %ecx
 	movq	%rbp, %rdi
@@ -3372,13 +3340,10 @@
 	movq	24(%rbx), %rsi
 	call	memmove
 	movl	$1, (%r12)
-.L534:
+.L520:
 	movq	8(%rsp), %rdi
 	call	freeaddrinfo
-	movq	88(%rsp), %rax
-	xorq	%fs:40, %rax
-	jne	.L548
-	addq	$96, %rsp
+	addq	$80, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 48
 	popq	%rbx
@@ -3392,19 +3357,17 @@
 	popq	%r14
 	.cfi_def_cfa_offset 8
 	ret
-.L546:
+.L531:
 	.cfi_restore_state
 	movq	%rbx, %rax
-.L525:
+.L511:
 	movl	$0, 0(%r13)
 	movq	%rax, %rbx
-	jmp	.L531
-.L547:
+	jmp	.L517
+.L532:
 	movl	$0, (%r12)
-	jmp	.L534
-.L548:
-	call	__stack_chk_fail
-.L542:
+	jmp	.L520
+.L527:
 	movq	hostname(%rip), %rdx
 	movl	$2, %edi
 	movl	$128, %ecx
@@ -3413,7 +3376,7 @@
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L543:
+.L528:
 	movl	%eax, %edi
 	movl	%eax, %ebx
 	call	gai_strerror
@@ -3556,9 +3519,6 @@
 	.cfi_def_cfa_offset 4480
 	movq	(%rsi), %rbx
 	movl	$47, %esi
-	movq	%fs:40, %rax
-	movq	%rax, 4408(%rsp)
-	xorl	%eax, %eax
 	movq	%rbx, %rdi
 	movq	%rbx, argv0(%rip)
 	call	strrchr
@@ -3582,59 +3542,59 @@
 	call	lookup_hostname.constprop.1
 	movl	24(%rsp), %ecx
 	testl	%ecx, %ecx
-	jne	.L551
+	jne	.L535
 	cmpl	$0, 28(%rsp)
-	je	.L687
-.L551:
+	je	.L670
+.L535:
 	movq	throttlefile(%rip), %rdi
 	movl	$0, numthrottles(%rip)
 	movl	$0, maxthrottles(%rip)
 	movq	$0, throttles(%rip)
 	testq	%rdi, %rdi
-	je	.L552
+	je	.L536
 	call	read_throttlefile
-.L552:
+.L536:
 	call	getuid
 	testl	%eax, %eax
 	movl	$32767, %r15d
 	movl	$32767, 4(%rsp)
-	je	.L688
-.L553:
+	je	.L671
+.L537:
 	movq	logfile(%rip), %rbx
 	testq	%rbx, %rbx
-	je	.L624
+	je	.L607
 	movl	$.LC102, %edi
 	movl	$10, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	je	.L689
+	je	.L672
 	movl	$.LC77, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L557
+	jne	.L541
 	movq	stdout(%rip), %r14
-.L555:
+.L539:
 	movq	dir(%rip), %rdi
 	testq	%rdi, %rdi
-	je	.L561
+	je	.L545
 	call	chdir
 	testl	%eax, %eax
-	js	.L690
-.L561:
+	js	.L673
+.L545:
 	leaq	304(%rsp), %rbx
 	movl	$4096, %esi
 	movq	%rbx, %rdi
 	call	getcwd
 	movq	%rbx, %rdx
-.L562:
+.L546:
 	movl	(%rdx), %ecx
 	addq	$4, %rdx
 	leal	-16843009(%rcx), %eax
 	notl	%ecx
 	andl	%ecx, %eax
 	andl	$-2139062144, %eax
-	je	.L562
+	je	.L546
 	movl	%eax, %ecx
 	shrl	$16, %ecx
 	testl	$32896, %eax
@@ -3646,19 +3606,19 @@
 	sbbq	$3, %rdx
 	subq	%rbx, %rdx
 	cmpb	$47, 303(%rsp,%rdx)
-	je	.L564
+	je	.L548
 	movw	$47, (%rbx,%rdx)
-.L564:
+.L548:
 	movl	debug(%rip), %edx
 	testl	%edx, %edx
-	jne	.L565
+	jne	.L549
 	movq	stdin(%rip), %rdi
 	call	fclose
 	movq	stdout(%rip), %rdi
 	cmpq	%rdi, %r14
-	je	.L566
+	je	.L550
 	call	fclose
-.L566:
+.L550:
 	movq	stderr(%rip), %rdi
 	call	fclose
 	movl	$1, %esi
@@ -3666,16 +3626,16 @@
 	call	daemon
 	testl	%eax, %eax
 	movl	$.LC109, %esi
-	js	.L685
-.L567:
+	js	.L668
+.L551:
 	movq	pidfile(%rip), %rdi
 	testq	%rdi, %rdi
-	je	.L568
+	je	.L552
 	movl	$.LC110, %esi
 	call	fopen
 	testq	%rax, %rax
 	movq	%rax, %r13
-	je	.L691
+	je	.L674
 	call	getpid
 	movq	%r13, %rdi
 	movl	%eax, %edx
@@ -3684,23 +3644,23 @@
 	call	fprintf
 	movq	%r13, %rdi
 	call	fclose
-.L568:
+.L552:
 	call	fdwatch_get_nfiles
 	testl	%eax, %eax
 	movl	%eax, max_connects(%rip)
-	js	.L692
+	js	.L675
 	subl	$10, %eax
 	cmpl	$0, do_chroot(%rip)
 	movl	%eax, max_connects(%rip)
-	jne	.L693
-.L571:
+	jne	.L676
+.L555:
 	movq	data_dir(%rip), %rdi
 	testq	%rdi, %rdi
-	je	.L575
+	je	.L559
 	call	chdir
 	testl	%eax, %eax
-	js	.L694
-.L575:
+	js	.L677
+.L559:
 	movl	$handle_term, %esi
 	movl	$15, %edi
 	xorl	%eax, %eax
@@ -3784,7 +3744,7 @@
 	.cfi_def_cfa_offset 4480
 	testq	%rax, %rax
 	movq	%rax, hs(%rip)
-	je	.L686
+	je	.L669
 	movq	JunkClientData(%rip), %rdx
 	xorl	%edi, %edi
 	movl	$1, %r8d
@@ -3792,7 +3752,7 @@
 	movl	$occasional, %esi
 	call	tmr_create
 	testq	%rax, %rax
-	je	.L695
+	je	.L678
 	movq	JunkClientData(%rip), %rdx
 	xorl	%edi, %edi
 	movl	$1, %r8d
@@ -3800,9 +3760,9 @@
 	movl	$idle, %esi
 	call	tmr_create
 	testq	%rax, %rax
-	je	.L696
+	je	.L679
 	cmpl	$0, numthrottles(%rip)
-	jle	.L581
+	jle	.L565
 	movq	JunkClientData(%rip), %rdx
 	xorl	%edi, %edi
 	movl	$1, %r8d
@@ -3810,8 +3770,8 @@
 	movl	$update_throttles, %esi
 	call	tmr_create
 	testq	%rax, %rax
-	je	.L697
-.L581:
+	je	.L680
+.L565:
 	movq	JunkClientData(%rip), %rdx
 	xorl	%edi, %edi
 	movl	$1, %r8d
@@ -3819,7 +3779,7 @@
 	movl	$show_stats, %esi
 	call	tmr_create
 	testq	%rax, %rax
-	je	.L698
+	je	.L681
 	xorl	%edi, %edi
 	call	time
 	movq	$0, stats_connections(%rip)
@@ -3829,32 +3789,32 @@
 	movl	$0, stats_simultaneous(%rip)
 	call	getuid
 	testl	%eax, %eax
-	jne	.L584
+	jne	.L568
 	xorl	%esi, %esi
 	xorl	%edi, %edi
 	call	setgroups
 	testl	%eax, %eax
 	movl	$.LC124, %esi
-	js	.L685
+	js	.L668
 	movl	%r15d, %edi
 	call	setgid
 	testl	%eax, %eax
 	movl	$.LC125, %esi
-	js	.L685
+	js	.L668
 	movq	user(%rip), %rdi
 	movl	%r15d, %esi
 	call	initgroups
 	testl	%eax, %eax
-	js	.L699
-.L587:
+	js	.L682
+.L571:
 	movl	4(%rsp), %edi
 	call	setuid
 	testl	%eax, %eax
 	movl	$.LC127, %esi
-	js	.L685
+	js	.L668
 	cmpl	$0, do_chroot(%rip)
-	je	.L700
-.L584:
+	je	.L683
+.L568:
 	movslq	max_connects(%rip), %rbp
 	movq	%rbp, %rbx
 	imulq	$144, %rbp, %rbp
@@ -3862,141 +3822,141 @@
 	call	malloc
 	testq	%rax, %rax
 	movq	%rax, connects(%rip)
-	je	.L590
+	je	.L574
 	xorl	%ecx, %ecx
 	testl	%ebx, %ebx
 	movq	%rax, %rdx
-	jle	.L595
+	jle	.L579
 	.p2align 4,,10
 	.p2align 3
-.L664:
+.L647:
 	addl	$1, %ecx
 	movl	$0, (%rdx)
 	movq	$0, 8(%rdx)
 	movl	%ecx, 4(%rdx)
 	addq	$144, %rdx
 	cmpl	%ecx, %ebx
-	jne	.L664
-.L595:
+	jne	.L647
+.L579:
 	movl	$-1, -140(%rax,%rbp)
 	movq	hs(%rip), %rax
 	movl	$0, first_free_connect(%rip)
 	movl	$0, num_connects(%rip)
 	movl	$0, httpd_conn_count(%rip)
 	testq	%rax, %rax
-	je	.L596
+	je	.L580
 	movl	72(%rax), %edi
 	cmpl	$-1, %edi
-	je	.L597
+	je	.L581
 	xorl	%edx, %edx
 	xorl	%esi, %esi
 	call	fdwatch_add_fd
 	movq	hs(%rip), %rax
-.L597:
+.L581:
 	movl	76(%rax), %edi
 	cmpl	$-1, %edi
-	je	.L596
+	je	.L580
 	xorl	%edx, %edx
 	xorl	%esi, %esi
 	call	fdwatch_add_fd
-.L596:
+.L580:
 	leaq	32(%rsp), %rdi
 	call	tmr_prepare_timeval
 	.p2align 4,,10
 	.p2align 3
-.L598:
+.L582:
 	movl	terminate(%rip), %eax
 	testl	%eax, %eax
-	je	.L621
+	je	.L605
 	cmpl	$0, num_connects(%rip)
-	jle	.L701
-.L621:
+	jle	.L684
+.L605:
 	movl	got_hup(%rip), %eax
 	testl	%eax, %eax
-	jne	.L702
-.L599:
+	jne	.L685
+.L583:
 	leaq	32(%rsp), %rdi
 	call	tmr_mstimeout
 	movq	%rax, %rdi
 	call	fdwatch
 	testl	%eax, %eax
 	movl	%eax, %ebx
-	js	.L703
+	js	.L686
 	leaq	32(%rsp), %rdi
 	call	tmr_prepare_timeval
 	testl	%ebx, %ebx
-	je	.L704
+	je	.L687
 	movq	hs(%rip), %rax
 	testq	%rax, %rax
-	je	.L612
+	je	.L596
 	movl	76(%rax), %edi
 	cmpl	$-1, %edi
-	je	.L607
+	je	.L591
 	call	fdwatch_check_fd
 	testl	%eax, %eax
-	jne	.L608
-.L611:
+	jne	.L592
+.L595:
 	movq	hs(%rip), %rax
 	testq	%rax, %rax
-	je	.L612
-.L607:
+	je	.L596
+.L591:
 	movl	72(%rax), %edi
 	cmpl	$-1, %edi
-	je	.L612
+	je	.L596
 	call	fdwatch_check_fd
 	testl	%eax, %eax
-	jne	.L705
+	jne	.L688
 	.p2align 4,,10
 	.p2align 3
-.L612:
+.L596:
 	call	fdwatch_get_next_client_data
 	cmpq	$-1, %rax
 	movq	%rax, %rbx
-	je	.L706
+	je	.L689
 	testq	%rbx, %rbx
-	je	.L612
+	je	.L596
 	movq	8(%rbx), %rax
 	movl	704(%rax), %edi
 	call	fdwatch_check_fd
 	testl	%eax, %eax
-	je	.L707
+	je	.L690
 	movl	(%rbx), %eax
 	cmpl	$2, %eax
-	je	.L615
+	je	.L599
 	cmpl	$4, %eax
-	je	.L616
+	je	.L600
 	cmpl	$1, %eax
-	jne	.L612
+	jne	.L596
 	leaq	32(%rsp), %rsi
 	movq	%rbx, %rdi
 	call	handle_read
-	jmp	.L612
-.L689:
+	jmp	.L596
+.L672:
 	movl	$1, no_log(%rip)
 	xorl	%r14d, %r14d
-	jmp	.L555
-.L565:
+	jmp	.L539
+.L549:
 	call	setsid
-	jmp	.L567
-.L692:
+	jmp	.L551
+.L675:
 	movl	$.LC112, %esi
-.L685:
+.L668:
 	movl	$2, %edi
 	xorl	%eax, %eax
 	call	syslog
-.L686:
+.L669:
 	movl	$1, %edi
 	call	exit
-.L688:
+.L671:
 	movq	user(%rip), %rdi
 	call	getpwnam
 	testq	%rax, %rax
-	je	.L708
+	je	.L691
 	movl	16(%rax), %ecx
 	movl	20(%rax), %r15d
 	movl	%ecx, 4(%rsp)
-	jmp	.L553
-.L687:
+	jmp	.L537
+.L670:
 	movl	$.LC98, %esi
 	movl	$3, %edi
 	xorl	%eax, %eax
@@ -4008,81 +3968,81 @@
 	call	fprintf
 	movl	$1, %edi
 	call	exit
-.L707:
+.L690:
 	leaq	32(%rsp), %rsi
 	movq	%rbx, %rdi
 	call	clear_connection
-	jmp	.L612
-.L703:
+	jmp	.L596
+.L686:
 	call	__errno_location
 	movl	(%rax), %eax
 	cmpl	$4, %eax
-	je	.L598
+	je	.L582
 	cmpl	$11, %eax
-	je	.L598
+	je	.L582
 	movl	$3, %edi
 	movl	$.LC130, %esi
 	xorl	%eax, %eax
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L616:
+.L600:
 	leaq	32(%rsp), %rsi
 	movq	%rbx, %rdi
 	call	handle_linger
-	jmp	.L612
-.L615:
+	jmp	.L596
+.L599:
 	leaq	32(%rsp), %rsi
 	movq	%rbx, %rdi
 	call	handle_send
-	jmp	.L612
-.L706:
+	jmp	.L596
+.L689:
 	leaq	32(%rsp), %rdi
 	call	tmr_run
 	movl	got_usr1(%rip), %eax
 	testl	%eax, %eax
-	je	.L598
+	je	.L582
 	cmpl	$0, terminate(%rip)
-	jne	.L598
+	jne	.L582
 	movq	hs(%rip), %rax
 	movl	$1, terminate(%rip)
 	testq	%rax, %rax
-	je	.L598
+	je	.L582
 	movl	72(%rax), %edi
 	cmpl	$-1, %edi
-	je	.L619
+	je	.L603
 	call	fdwatch_del_fd
 	movq	hs(%rip), %rax
-.L619:
+.L603:
 	movl	76(%rax), %edi
 	cmpl	$-1, %edi
-	je	.L620
+	je	.L604
 	call	fdwatch_del_fd
-.L620:
+.L604:
 	movq	hs(%rip), %rdi
 	call	httpd_unlisten
-	jmp	.L598
-.L702:
+	jmp	.L582
+.L685:
 	call	re_open_logfile
 	movl	$0, got_hup(%rip)
-	jmp	.L599
-.L704:
+	jmp	.L583
+.L687:
 	leaq	32(%rsp), %rdi
 	call	tmr_run
-	jmp	.L598
-.L693:
+	jmp	.L582
+.L676:
 	movq	%rbx, %rdi
 	call	chroot
 	testl	%eax, %eax
-	js	.L709
+	js	.L692
 	movq	logfile(%rip), %r13
 	testq	%r13, %r13
-	je	.L573
+	je	.L557
 	movl	$.LC77, %esi
 	movq	%r13, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	je	.L573
+	je	.L557
 	xorl	%eax, %eax
 	orq	$-1, %rcx
 	movq	%rbx, %rdi
@@ -4094,17 +4054,17 @@
 	movq	%rcx, 8(%rsp)
 	call	strncmp
 	testl	%eax, %eax
-	jne	.L574
+	jne	.L558
 	movq	8(%rsp), %rcx
 	movq	%r13, %rdi
 	leaq	-2(%r13,%rcx), %rsi
 	call	strcpy
-.L573:
+.L557:
 	movq	%rbx, %rdi
 	movw	$47, 304(%rsp)
 	call	chdir
 	testl	%eax, %eax
-	jns	.L571
+	jns	.L555
 	movl	$.LC116, %esi
 	movl	$2, %edi
 	xorl	%eax, %eax
@@ -4113,10 +4073,10 @@
 	call	perror
 	movl	$1, %edi
 	call	exit
-.L624:
+.L607:
 	xorl	%r14d, %r14d
-	jmp	.L555
-.L557:
+	jmp	.L539
+.L541:
 	movq	%rbx, %rdi
 	movl	$.LC79, %esi
 	call	fopen
@@ -4126,11 +4086,11 @@
 	movq	%rbx, %rdi
 	call	chmod
 	testq	%r14, %r14
-	je	.L627
+	je	.L610
 	testl	%eax, %eax
-	jne	.L627
+	jne	.L610
 	cmpb	$47, (%rbx)
-	je	.L560
+	je	.L544
 	movl	$.LC103, %esi
 	movl	$4, %edi
 	xorl	%eax, %eax
@@ -4140,7 +4100,7 @@
 	movl	$.LC104, %esi
 	xorl	%eax, %eax
 	call	fprintf
-.L560:
+.L544:
 	movq	%r14, %rdi
 	call	fileno
 	movl	$1, %edx
@@ -4150,7 +4110,7 @@
 	call	fcntl
 	call	getuid
 	testl	%eax, %eax
-	jne	.L555
+	jne	.L539
 	movq	%r14, %rdi
 	call	fileno
 	movl	4(%rsp), %esi
@@ -4158,15 +4118,15 @@
 	movl	%eax, %edi
 	call	fchown
 	testl	%eax, %eax
-	jns	.L555
+	jns	.L539
 	movl	$.LC105, %esi
 	movl	$4, %edi
 	xorl	%eax, %eax
 	call	syslog
 	movl	$.LC106, %edi
 	call	perror
-	jmp	.L555
-.L690:
+	jmp	.L539
+.L673:
 	movl	$.LC107, %esi
 	movl	$2, %edi
 	xorl	%eax, %eax
@@ -4175,7 +4135,7 @@
 	call	perror
 	movl	$1, %edi
 	call	exit
-.L691:
+.L674:
 	movq	pidfile(%rip), %rdx
 	movl	$2, %edi
 	movl	$.LC69, %esi
@@ -4183,13 +4143,13 @@
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L695:
+.L678:
 	movl	$2, %edi
 	movl	$.LC120, %esi
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L694:
+.L677:
 	movl	$.LC118, %esi
 	movl	$2, %edi
 	xorl	%eax, %eax
@@ -4198,7 +4158,7 @@
 	call	perror
 	movl	$1, %edi
 	call	exit
-.L574:
+.L558:
 	xorl	%eax, %eax
 	movl	$.LC114, %esi
 	movl	$4, %edi
@@ -4208,42 +4168,42 @@
 	movl	$.LC115, %esi
 	xorl	%eax, %eax
 	call	fprintf
-	jmp	.L573
-.L700:
+	jmp	.L557
+.L683:
 	movl	$.LC128, %esi
 	movl	$4, %edi
 	xorl	%eax, %eax
 	call	syslog
-	jmp	.L584
-.L697:
+	jmp	.L568
+.L680:
 	movl	$2, %edi
 	movl	$.LC122, %esi
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L608:
+.L592:
 	movq	hs(%rip), %rax
 	leaq	32(%rsp), %rdi
 	movl	76(%rax), %esi
 	call	handle_newconnect
 	testl	%eax, %eax
-	jne	.L598
-	jmp	.L611
-.L705:
+	jne	.L582
+	jmp	.L595
+.L688:
 	movq	hs(%rip), %rax
 	leaq	32(%rsp), %rdi
 	movl	72(%rax), %esi
 	call	handle_newconnect
 	testl	%eax, %eax
-	jne	.L598
-	jmp	.L612
-.L698:
+	jne	.L582
+	jmp	.L596
+.L681:
 	movl	$2, %edi
 	movl	$.LC123, %esi
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L627:
+.L610:
 	movq	%rbx, %rdx
 	movl	$.LC69, %esi
 	movl	$2, %edi
@@ -4253,7 +4213,7 @@
 	call	perror
 	movl	$1, %edi
 	call	exit
-.L701:
+.L684:
 	call	shut_down
 	movl	$5, %edi
 	movl	$.LC85, %esi
@@ -4262,13 +4222,13 @@
 	call	closelog
 	xorl	%edi, %edi
 	call	exit
-.L696:
+.L679:
 	movl	$2, %edi
 	movl	$.LC121, %esi
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L709:
+.L692:
 	movl	$.LC113, %esi
 	movl	$2, %edi
 	xorl	%eax, %eax
@@ -4277,7 +4237,7 @@
 	call	perror
 	movl	$1, %edi
 	call	exit
-.L708:
+.L691:
 	movq	user(%rip), %rdx
 	movl	$.LC100, %esi
 	movl	$2, %edi
@@ -4290,15 +4250,15 @@
 	call	fprintf
 	movl	$1, %edi
 	call	exit
-.L590:
+.L574:
 	movl	$.LC129, %esi
-	jmp	.L685
-.L699:
+	jmp	.L668
+.L682:
 	movl	$.LC126, %esi
 	movl	$4, %edi
 	xorl	%eax, %eax
 	call	syslog
-	jmp	.L587
+	jmp	.L571
 	.cfi_endproc
 .LFE9:
 	.size	main, .-main
